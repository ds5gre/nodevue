(()=>{var e={611:(e,o,s)=>{const t=s(983);e.exports=class{constructor(e){this.pool=e}execute(e){t.using(this.pool.connect(),(o=>{e(o)}))}excuteTx(e){t.using(pool.connect(),(o=>{o.beginTransaction((s=>{e(o)}))}))}}},776:(e,o,s)=>{const{connect:t}=s(565),n=s(366),r=(s(669),s(983)),{endianness:i}=s(87);r.promisifyAll(n),r.promisifyAll(s(640).prototype),r.promisifyAll(s(498).prototype);const c={host:"localhost",user:"root",password:"kim",database:"mysql",multipleStateents:!0,connectionLimit:5,waitForConnections:!1};e.exports=class{constructor(e){e=e||c,this.pool=n.createPool(e)}connect(){return this.pool.getConnectionAsync().disposer((e=>e.release()))}end(){this.pool.end((function(e){console.log(">>>>>>>>>>>>>>>> end of pool!!"),e&&console.log("err pool ending!!")}))}}},647:e=>{"use strict";e.exports=JSON.parse('{"id":123,"name":"kim"}')},983:e=>{"use strict";e.exports=require("bluebird")},826:e=>{"use strict";e.exports=require("ejs")},127:e=>{"use strict";e.exports=require("express")},565:e=>{"use strict";e.exports=require("http2")},366:e=>{"use strict";e.exports=require("mysql")},640:e=>{"use strict";e.exports=require("mysql/lib/Connection")},498:e=>{"use strict";e.exports=require("mysql/lib/Pool")},87:e=>{"use strict";e.exports=require("os")},395:e=>{"use strict";e.exports=require("socket.io")},669:e=>{"use strict";e.exports=require("util")}},o={};function s(t){var n=o[t];if(void 0!==n)return n.exports;var r=o[t]={exports:{}};return e[t](r,r.exports,s),r.exports}(()=>{const e=s(127),o=e(),t=s(776),n=s(611),r=s(647),i=new t;o.use(e.static("public")),o.set("views",__dirname+"/views"),o.set("view engine","ejs"),o.engine("html",s(826).renderFile),o.get("/test/:email",((e,o)=>{r.email=e.params.email,r.aa=e.query.aa,o.json(r)})),o.get("/dbtest/:user",((e,o)=>{let s=e.params.user;new n(i).execute((e=>{e.query("select * from user where user=?",[s],((e,s)=>{o.json(s)}))}))}));const c=o.listen(3e3,(function(){console.log("Express's started on port 3000")}));s(395)(c,{log:!1,origins:"*:*",pingInterval:3e3,pingTimeout:5e3}).sockets.on("connection",((e,o)=>{e.emit("message",{msg:"Welcome "+e.id}),console.log("connection>>",e.id,e.handshake.query),e.on("join",(function(o,s){e.join(o,(function(){console.log("Join",o,Object.keys(e.rooms))}))})),e.on("leave",(function(o,s){e.leave(o)})),e.on("message",((o,s)=>{console.log("message>>",o.msg,Object.keys(e.rooms)),s(o.msg)})),e.on("disconnecting",(function(o,s){console.log("disconnecting>>",e.id)}))}))})()})();